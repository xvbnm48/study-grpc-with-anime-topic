// Code generated by protoc-gen-go. DO NOT EDIT.
// source: anime.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Anime struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Genre                string   `protobuf:"bytes,3,opt,name=genre,proto3" json:"genre,omitempty"`
	Studio               string   `protobuf:"bytes,4,opt,name=studio,proto3" json:"studio,omitempty"`
	Year                 string   `protobuf:"bytes,5,opt,name=year,proto3" json:"year,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Anime) Reset()         { *m = Anime{} }
func (m *Anime) String() string { return proto.CompactTextString(m) }
func (*Anime) ProtoMessage()    {}
func (*Anime) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cdf86e3cafc4bf7, []int{0}
}

func (m *Anime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Anime.Unmarshal(m, b)
}
func (m *Anime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Anime.Marshal(b, m, deterministic)
}
func (m *Anime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Anime.Merge(m, src)
}
func (m *Anime) XXX_Size() int {
	return xxx_messageInfo_Anime.Size(m)
}
func (m *Anime) XXX_DiscardUnknown() {
	xxx_messageInfo_Anime.DiscardUnknown(m)
}

var xxx_messageInfo_Anime proto.InternalMessageInfo

func (m *Anime) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Anime) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Anime) GetGenre() string {
	if m != nil {
		return m.Genre
	}
	return ""
}

func (m *Anime) GetStudio() string {
	if m != nil {
		return m.Studio
	}
	return ""
}

func (m *Anime) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

type AnimeResponse struct {
	Anime                []*Anime `protobuf:"bytes,1,rep,name=anime,proto3" json:"anime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnimeResponse) Reset()         { *m = AnimeResponse{} }
func (m *AnimeResponse) String() string { return proto.CompactTextString(m) }
func (*AnimeResponse) ProtoMessage()    {}
func (*AnimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cdf86e3cafc4bf7, []int{1}
}

func (m *AnimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnimeResponse.Unmarshal(m, b)
}
func (m *AnimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnimeResponse.Marshal(b, m, deterministic)
}
func (m *AnimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnimeResponse.Merge(m, src)
}
func (m *AnimeResponse) XXX_Size() int {
	return xxx_messageInfo_AnimeResponse.Size(m)
}
func (m *AnimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnimeResponse proto.InternalMessageInfo

func (m *AnimeResponse) GetAnime() []*Anime {
	if m != nil {
		return m.Anime
	}
	return nil
}

func init() {
	proto.RegisterType((*Anime)(nil), "Anime")
	proto.RegisterType((*AnimeResponse)(nil), "AnimeResponse")
}

func init() { proto.RegisterFile("anime.proto", fileDescriptor_5cdf86e3cafc4bf7) }

var fileDescriptor_5cdf86e3cafc4bf7 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x15, 0xda, 0x44, 0x70, 0x01, 0x06, 0x0b, 0x21, 0x0b, 0x31, 0x44, 0x99, 0xba, 0x38,
	0x11, 0x29, 0x03, 0x2b, 0x2c, 0xec, 0x65, 0x63, 0x4b, 0xdc, 0x53, 0x7a, 0x43, 0x6c, 0xcb, 0x71,
	0x0b, 0x9d, 0xf8, 0xeb, 0xc8, 0xe7, 0x0c, 0xb0, 0xdd, 0xf7, 0x9e, 0x75, 0xef, 0xf9, 0xa0, 0xec,
	0x0d, 0x4d, 0xd8, 0x38, 0x6f, 0x83, 0xad, 0x7f, 0x20, 0x7f, 0x8d, 0x28, 0x04, 0xac, 0x4d, 0x3f,
	0xa1, 0xcc, 0xaa, 0x6c, 0x73, 0xb5, 0xe3, 0x59, 0x54, 0x50, 0xee, 0x71, 0xd6, 0x9e, 0x5c, 0x20,
	0x6b, 0xe4, 0x05, 0x5b, 0x7f, 0x25, 0x71, 0x07, 0xf9, 0x88, 0xc6, 0xa3, 0x5c, 0xb1, 0x97, 0x40,
	0xdc, 0x43, 0x31, 0x87, 0xe3, 0x9e, 0xac, 0x5c, 0xb3, 0xbc, 0x50, 0xcc, 0x38, 0x63, 0xef, 0x65,
	0x9e, 0x32, 0xe2, 0x5c, 0x2b, 0xb8, 0xe1, 0x02, 0x3b, 0x9c, 0x9d, 0x35, 0x33, 0x8a, 0x47, 0xc8,
	0xb9, 0xa0, 0xcc, 0xaa, 0xd5, 0xa6, 0xec, 0x8a, 0x26, 0xd9, 0x49, 0xec, 0x3a, 0xb8, 0x66, 0xfe,
	0x40, 0x7f, 0x22, 0x8d, 0xa2, 0x86, 0xcb, 0x77, 0x0c, 0xe9, 0x0b, 0xcb, 0xd3, 0x87, 0xdb, 0xe6,
	0xdf, 0xc6, 0xb7, 0xed, 0xe7, 0xd3, 0x48, 0xe1, 0x70, 0x1c, 0x1a, 0x6d, 0xa7, 0xf6, 0xfb, 0x34,
	0x98, 0xe9, 0xf9, 0xa5, 0x8d, 0x9d, 0xce, 0x6a, 0xf4, 0x4e, 0xab, 0x2f, 0x0a, 0x07, 0xc5, 0xfb,
	0x55, 0xb0, 0x8e, 0x74, 0xeb, 0x86, 0xa1, 0xe0, 0xfb, 0x6c, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x61, 0xa2, 0x9c, 0x39, 0x2e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AnimeServiceClient is the client API for AnimeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnimeServiceClient interface {
	GetAnime(ctx context.Context, in *Anime, opts ...grpc.CallOption) (*AnimeResponse, error)
}

type animeServiceClient struct {
	cc *grpc.ClientConn
}

func NewAnimeServiceClient(cc *grpc.ClientConn) AnimeServiceClient {
	return &animeServiceClient{cc}
}

func (c *animeServiceClient) GetAnime(ctx context.Context, in *Anime, opts ...grpc.CallOption) (*AnimeResponse, error) {
	out := new(AnimeResponse)
	err := c.cc.Invoke(ctx, "/AnimeService/GetAnime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnimeServiceServer is the server API for AnimeService service.
type AnimeServiceServer interface {
	GetAnime(context.Context, *Anime) (*AnimeResponse, error)
}

// UnimplementedAnimeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAnimeServiceServer struct {
}

func (*UnimplementedAnimeServiceServer) GetAnime(ctx context.Context, req *Anime) (*AnimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAnime not implemented")
}

func RegisterAnimeServiceServer(s *grpc.Server, srv AnimeServiceServer) {
	s.RegisterService(&_AnimeService_serviceDesc, srv)
}

func _AnimeService_GetAnime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Anime)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnimeServiceServer).GetAnime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AnimeService/GetAnime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnimeServiceServer).GetAnime(ctx, req.(*Anime))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnimeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AnimeService",
	HandlerType: (*AnimeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAnime",
			Handler:    _AnimeService_GetAnime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "anime.proto",
}
